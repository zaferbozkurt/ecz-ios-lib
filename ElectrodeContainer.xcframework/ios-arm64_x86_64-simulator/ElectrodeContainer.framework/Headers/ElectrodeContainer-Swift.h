#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef ELECTRODECONTAINER_SWIFT_H
#define ELECTRODECONTAINER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <ElectrodeContainer/ElectrodeContainer.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ElectrodeContainer",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSDictionary;

SWIFT_PROTOCOL("_TtP18ElectrodeContainer10Bridgeable_")
@protocol Bridgeable
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end

@class NSString;
@class NSObject;

SWIFT_PROTOCOL("_TtP18ElectrodeContainer21ENMiniAppDataProvider_")
@protocol ENMiniAppDataProvider
@property (nonatomic, readonly, copy) NSString * _Nonnull rootComponentName;
@property (nonatomic, copy) NSDictionary * _Nullable properties;
@optional
@property (nonatomic, copy) NSDictionary * _Nullable globalProperties;
@end

@class NSNumber;

SWIFT_PROTOCOL("_TtP18ElectrodeContainer24ENMiniAppNavDataProvider_")
@protocol ENMiniAppNavDataProvider <ENMiniAppDataProvider>
@optional
@property (nonatomic, copy) void (^ _Nullable finishedCallback)(NSString * _Nullable) SWIFT_DEPRECATED_MSG("finishedCallback is deprecated, use finish");
@property (nonatomic, copy) void (^ _Nullable finish)(NSDictionary * _Nullable);
@property (nonatomic, copy) BOOL (^ _Nonnull navigateWithRoute)(NSDictionary * _Nonnull);
@property (nonatomic, copy) BOOL (^ _Nonnull backToMiniApp)(NSString * _Nonnull, NSDictionary * _Nonnull);
@end

@class NSCoder;
@class UIViewController;
@class NSBundle;

SWIFT_CLASS("_TtC18ElectrodeContainer26ENBaseNavigationController")
@interface ENBaseNavigationController : UINavigationController <ENMiniAppNavDataProvider>
@property (nonatomic, copy) NSString * _Nonnull rootComponentName;
@property (nonatomic, copy) NSDictionary * _Nullable properties;
@property (nonatomic, copy) NSDictionary * _Nullable globalProperties;
@property (nonatomic, copy) BOOL (^ _Nonnull navigateWithRoute)(NSDictionary * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable finish)(NSDictionary * _Nullable);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer14ENCoreDelegate")
@interface ENCoreDelegate : NSObject
@property (nonatomic, copy) NSString * _Nonnull viewIdentifier;
- (void)viewDidLoadWithViewController:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC18ElectrodeContainer20ENNavigationDelegate")
@interface ENNavigationDelegate : ENCoreDelegate
- (void)viewDidLoadWithViewController:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer15ElectrodeObject")
@interface ElectrodeObject : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class EnNavigationAPIEvents;
@class EnNavigationAPIRequests;

SWIFT_CLASS("_TtC18ElectrodeContainer15EnNavigationAPI")
@interface EnNavigationAPI : NSObject
@property (nonatomic, strong) EnNavigationAPIEvents * _Nonnull events;
@property (nonatomic, strong) EnNavigationAPIRequests * _Nonnull requests;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSUUID;
@class NavEventData;

SWIFT_CLASS("_TtC18ElectrodeContainer21EnNavigationAPIEvents")
@interface EnNavigationAPIEvents : NSObject
- (NSUUID * _Nullable)addNavEventEventListenerWithEventListener:(ElectrodeBridgeEventListener _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeEventListener _Nullable)removeNavEventEventListenerWithUuid:(NSUUID * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (void)emitEventNavEventWithEventData:(NavEventData * _Nonnull)_;
- (NSUUID * _Nullable)addOnNavButtonClickEventListenerWithEventListener:(ElectrodeBridgeEventListener _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeEventListener _Nullable)removeOnNavButtonClickEventListenerWithUuid:(NSUUID * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (void)emitEventOnNavButtonClickWithButtonId:(NSString * _Nonnull)_;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ErnNavRoute;
@class None;
@protocol ElectrodeFailureMessage;

SWIFT_CLASS("_TtC18ElectrodeContainer23EnNavigationAPIRequests")
@interface EnNavigationAPIRequests : NSObject
- (NSUUID * _Nullable)registerBackRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)registerFinishRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)registerNavigateRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)registerUpdateRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterBackRequestHandlerWithUuid:(NSUUID * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterFinishRequestHandlerWithUuid:(NSUUID * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterNavigateRequestHandlerWithUuid:(NSUUID * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterUpdateRequestHandlerWithUuid:(NSUUID * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (void)backWithRoute:(ErnNavRoute * _Nonnull)_ responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))_;
- (void)finishWithFinalPayload:(NSString * _Nonnull)_ responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))_;
- (void)navigateWithRoute:(ErnNavRoute * _Nonnull)_ responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))_;
- (void)updateWithUpdatedRoute:(ErnNavRoute * _Nonnull)_ responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))_;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// GENERATED CODE: DO NOT MODIFY
/// Do not modify the content of this class as it will be regenerated every time an api-impl-regen command is executed.
/// @see <a href:“https://electrode.gitbooks.io/electrode-native/content/v/master/cli/regen-api-impl.html”></a>
/// <p>
/// <p>
/// Marker base class that is used for passing custom config implementations to an API request handler implementation.
SWIFT_CLASS("_TtC18ElectrodeContainer20RequestHandlerConfig")
@interface RequestHandlerConfig : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer21EnNavigationApiConfig")
@interface EnNavigationApiConfig : RequestHandlerConfig
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// GENERATED CODE: DO NOT MODIFY
/// Do not modify the content of this class as it will be regenerated every time an api-impl-regen command is executed.
/// @see <a href:“https://electrode.gitbooks.io/electrode-native/content/v/master/cli/regen-api-impl.html”></a>
SWIFT_CLASS("_TtC18ElectrodeContainer25EnNavigationApiController")
@interface EnNavigationApiController : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)registerWithConfig:(EnNavigationApiConfig * _Nullable)config;
@end


/// GENERATED CODE: DO NOT MODIFY
/// Do not modify the content of this class as it will be regenerated every time an api-impl-regen command is executed.
/// @see <a href:“https://electrode.gitbooks.io/electrode-native/content/v/master/cli/regen-api-impl.html”></a>
/// <p>
/// <p>
/// Marker interface that is used for request handler implementations inside an api.
SWIFT_PROTOCOL("_TtP18ElectrodeContainer37EnNavigationApiRequestHandlerDelegate_")
@protocol EnNavigationApiRequestHandlerDelegate
- (void)registerNavigateRequestHandler;
- (void)registerUpdateRequestHandler;
- (void)registerFinishRequestHandler;
- (void)registerBackRequestHandler;
@end


/// GENERATED CODE: DO NOT MODIFY
/// Do not modify the content of this class as it will be regenerated every time an api-impl-regen command is executed.
/// @see <a href:“https://electrode.gitbooks.io/electrode-native/content/v/master/cli/regen-api-impl.html”></a>
SWIFT_CLASS("_TtC18ElectrodeContainer22RequestHandlerProvider")
@interface RequestHandlerProvider : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This class is a generated place holder for your EnNavigation implementations.!
/// Feel free to modify this class contents as needed. <code>ern regen-api-impl</code> command WILL NOT modify the content of this class.
/// Don’t modify the class name as this naming convention is used for container generation.
SWIFT_CLASS("_TtC18ElectrodeContainer37EnNavigationApiRequestHandlerProvider")
@interface EnNavigationApiRequestHandlerProvider : RequestHandlerProvider <EnNavigationApiRequestHandlerDelegate>
- (void)registerNavigateRequestHandler;
- (void)registerUpdateRequestHandler;
- (void)registerFinishRequestHandler;
- (void)registerBackRequestHandler;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer18EnNavigationEvents")
@interface EnNavigationEvents : EnNavigationAPIEvents
- (NSUUID * _Nullable)addNavEventEventListenerWithEventListener:(ElectrodeBridgeEventListener _Nonnull)eventListener SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)addOnNavButtonClickEventListenerWithEventListener:(ElectrodeBridgeEventListener _Nonnull)eventListener SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeEventListener _Nullable)removeNavEventEventListenerWithUuid:(NSUUID * _Nonnull)uuid SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeEventListener _Nullable)removeOnNavButtonClickEventListenerWithUuid:(NSUUID * _Nonnull)uuid SWIFT_WARN_UNUSED_RESULT;
- (void)emitEventNavEventWithEventData:(NavEventData * _Nonnull)eventData;
- (void)emitEventOnNavButtonClickWithButtonId:(NSString * _Nonnull)buttonId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer20EnNavigationRequests")
@interface EnNavigationRequests : EnNavigationAPIRequests
- (NSUUID * _Nullable)registerBackRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)handler SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)registerFinishRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)handler SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)registerNavigateRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)handler SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)registerUpdateRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)handler SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterBackRequestHandlerWithUuid:(NSUUID * _Nonnull)uuid SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterFinishRequestHandlerWithUuid:(NSUUID * _Nonnull)uuid SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterNavigateRequestHandlerWithUuid:(NSUUID * _Nonnull)uuid SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterUpdateRequestHandlerWithUuid:(NSUUID * _Nonnull)uuid SWIFT_WARN_UNUSED_RESULT;
- (void)backWithRoute:(ErnNavRoute * _Nonnull)route responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))responseCompletionHandler;
- (void)finishWithFinalPayload:(NSString * _Nonnull)finalPayload responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))responseCompletionHandler;
- (void)navigateWithRoute:(ErnNavRoute * _Nonnull)route responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))responseCompletionHandler;
- (void)updateWithUpdatedRoute:(ErnNavRoute * _Nonnull)updatedRoute responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))responseCompletionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NavigationBar;

SWIFT_CLASS("_TtC18ElectrodeContainer11ErnNavRoute")
@interface ErnNavRoute : ElectrodeObject <Bridgeable>
/// Path of the Route. Mostly the name of the container(defined by the native app) or the miniapp name. The content of the path is mainly determined by the native implemenation of the API
@property (nonatomic, readonly, copy) NSString * _Nonnull path;
/// Optional Payload (respresented as JSON String) needed by the screen you are trying to navigate to.
@property (nonatomic, readonly, copy) NSString * _Nullable jsonPayload;
@property (nonatomic, readonly, strong) NavigationBar * _Nullable navigationBar;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer24MiniAppNavViewController")
@interface MiniAppNavViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer34MoviesReloadedNavigationController")
@interface MoviesReloadedNavigationController : ENBaseNavigationController
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC18ElectrodeContainer12NavEventData")
@interface NavEventData : ElectrodeObject <Bridgeable>
/// Type of the event. Supported values [BUTTON_CLICK, DID_FOCUS, DID_BLUR]
@property (nonatomic, readonly, copy) NSString * _Nonnull eventType;
/// MiniApp view identifier to indicate the view instance that is firing the event. This is needed when more than one instance of the same component is mounted.
@property (nonatomic, readonly, copy) NSString * _Nullable viewId;
/// optional payload associated with the event
@property (nonatomic, readonly, copy) NSString * _Nullable jsonPayload;
- (nonnull instancetype)initWithEventType:(NSString * _Nonnull)eventType viewId:(NSString * _Nullable)viewId jsonPayload:(NSString * _Nullable)jsonPayload OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end

@class NavigationBarButton;
@class NavigationBarLeftButton;

SWIFT_CLASS("_TtC18ElectrodeContainer13NavigationBar")
@interface NavigationBar : ElectrodeObject <Bridgeable>
/// Title of Nav Bar
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
/// Right button properties
@property (nonatomic, readonly, copy) NSArray<NavigationBarButton *> * _Nullable buttons;
@property (nonatomic, readonly, strong) NavigationBarLeftButton * _Nullable leftButton;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer19NavigationBarButton")
@interface NavigationBarButton : ElectrodeObject <Bridgeable>
/// Button title if any.
@property (nonatomic, readonly, copy) NSString * _Nullable title;
/// Icon resource identifier that can be used find the icon
@property (nonatomic, readonly, copy) NSString * _Nullable icon;
/// Specifies a tint for the icon. Supported formats: #RRGGBB, #AARRGGBB. Supported values: red, blue, green, black, white, gray, cyan, magenta, yellow, lightgray, darkgray, grey, lightgrey, darkgrey, aqua, fuchsia, lime, maroon, navy, olive, purple, silver and teal
@property (nonatomic, readonly, copy) NSString * _Nullable tint;
/// Id of the button, this namespace will be used as an identifier when a button click event is emitted.
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
/// @Deprecated This is now Deprecated with the introduction of NavigationBarLeftButton. Allowed enums: left, right
@property (nonatomic, readonly, copy) NSString * _Nullable location;
/// Accessibility label
@property (nonatomic, readonly, copy) NSString * _Nullable adaLabel;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer23NavigationBarLeftButton")
@interface NavigationBarLeftButton : ElectrodeObject <Bridgeable>
/// Button title if any, applied only for iOS.
@property (nonatomic, readonly, copy) NSString * _Nullable title;
/// Icon resource identifier that can be used find the icon
@property (nonatomic, readonly, copy) NSString * _Nullable icon;
/// Specifies a tint for the icon. Supported formats: #RRGGBB, #AARRGGBB. Supported values: red, blue, green, black, white, gray, cyan, magenta, yellow, lightgray, darkgray, grey, lightgrey, darkgrey, aqua, fuchsia, lime, maroon, navy, olive, purple, silver and teal
@property (nonatomic, readonly, copy) NSString * _Nullable tint;
/// Id of the button, this namespace will be used as an identifier when a button click event is emitted. If included, click will not be handled by native instead an event will be fired for react native to handle the backpress.
@property (nonatomic, readonly, copy) NSString * _Nullable id;
/// Accessibility label
@property (nonatomic, readonly, copy) NSString * _Nullable adaLabel;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer4None")
@interface None : NSObject <Bridgeable>
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP18ElectrodeContainer9Processor_")
@protocol Processor
- (NSUUID * _Nullable)execute SWIFT_WARN_UNUSED_RESULT;
@end




#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef ELECTRODECONTAINER_SWIFT_H
#define ELECTRODECONTAINER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <ElectrodeContainer/ElectrodeContainer.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ElectrodeContainer",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSDictionary;

SWIFT_PROTOCOL("_TtP18ElectrodeContainer10Bridgeable_")
@protocol Bridgeable
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end

@class NSString;
@class NSObject;

SWIFT_PROTOCOL("_TtP18ElectrodeContainer21ENMiniAppDataProvider_")
@protocol ENMiniAppDataProvider
@property (nonatomic, readonly, copy) NSString * _Nonnull rootComponentName;
@property (nonatomic, copy) NSDictionary * _Nullable properties;
@optional
@property (nonatomic, copy) NSDictionary * _Nullable globalProperties;
@end

@class NSNumber;

SWIFT_PROTOCOL("_TtP18ElectrodeContainer24ENMiniAppNavDataProvider_")
@protocol ENMiniAppNavDataProvider <ENMiniAppDataProvider>
@optional
@property (nonatomic, copy) void (^ _Nullable finishedCallback)(NSString * _Nullable) SWIFT_DEPRECATED_MSG("finishedCallback is deprecated, use finish");
@property (nonatomic, copy) void (^ _Nullable finish)(NSDictionary * _Nullable);
@property (nonatomic, copy) BOOL (^ _Nonnull navigateWithRoute)(NSDictionary * _Nonnull);
@property (nonatomic, copy) BOOL (^ _Nonnull backToMiniApp)(NSString * _Nonnull, NSDictionary * _Nonnull);
@end

@class NSCoder;
@class UIViewController;
@class NSBundle;

SWIFT_CLASS("_TtC18ElectrodeContainer26ENBaseNavigationController")
@interface ENBaseNavigationController : UINavigationController <ENMiniAppNavDataProvider>
@property (nonatomic, copy) NSString * _Nonnull rootComponentName;
@property (nonatomic, copy) NSDictionary * _Nullable properties;
@property (nonatomic, copy) NSDictionary * _Nullable globalProperties;
@property (nonatomic, copy) BOOL (^ _Nonnull navigateWithRoute)(NSDictionary * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable finish)(NSDictionary * _Nullable);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer14ENCoreDelegate")
@interface ENCoreDelegate : NSObject
@property (nonatomic, copy) NSString * _Nonnull viewIdentifier;
- (void)viewDidLoadWithViewController:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC18ElectrodeContainer20ENNavigationDelegate")
@interface ENNavigationDelegate : ENCoreDelegate
- (void)viewDidLoadWithViewController:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer15ElectrodeObject")
@interface ElectrodeObject : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class EnNavigationAPIEvents;
@class EnNavigationAPIRequests;

SWIFT_CLASS("_TtC18ElectrodeContainer15EnNavigationAPI")
@interface EnNavigationAPI : NSObject
@property (nonatomic, strong) EnNavigationAPIEvents * _Nonnull events;
@property (nonatomic, strong) EnNavigationAPIRequests * _Nonnull requests;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSUUID;
@class NavEventData;

SWIFT_CLASS("_TtC18ElectrodeContainer21EnNavigationAPIEvents")
@interface EnNavigationAPIEvents : NSObject
- (NSUUID * _Nullable)addNavEventEventListenerWithEventListener:(ElectrodeBridgeEventListener _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeEventListener _Nullable)removeNavEventEventListenerWithUuid:(NSUUID * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (void)emitEventNavEventWithEventData:(NavEventData * _Nonnull)_;
- (NSUUID * _Nullable)addOnNavButtonClickEventListenerWithEventListener:(ElectrodeBridgeEventListener _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeEventListener _Nullable)removeOnNavButtonClickEventListenerWithUuid:(NSUUID * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (void)emitEventOnNavButtonClickWithButtonId:(NSString * _Nonnull)_;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ErnNavRoute;
@class None;
@protocol ElectrodeFailureMessage;

SWIFT_CLASS("_TtC18ElectrodeContainer23EnNavigationAPIRequests")
@interface EnNavigationAPIRequests : NSObject
- (NSUUID * _Nullable)registerBackRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)registerFinishRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)registerNavigateRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)registerUpdateRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterBackRequestHandlerWithUuid:(NSUUID * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterFinishRequestHandlerWithUuid:(NSUUID * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterNavigateRequestHandlerWithUuid:(NSUUID * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterUpdateRequestHandlerWithUuid:(NSUUID * _Nonnull)_ SWIFT_WARN_UNUSED_RESULT;
- (void)backWithRoute:(ErnNavRoute * _Nonnull)_ responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))_;
- (void)finishWithFinalPayload:(NSString * _Nonnull)_ responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))_;
- (void)navigateWithRoute:(ErnNavRoute * _Nonnull)_ responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))_;
- (void)updateWithUpdatedRoute:(ErnNavRoute * _Nonnull)_ responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))_;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// GENERATED CODE: DO NOT MODIFY
/// Do not modify the content of this class as it will be regenerated every time an api-impl-regen command is executed.
/// @see <a href:“https://electrode.gitbooks.io/electrode-native/content/v/master/cli/regen-api-impl.html”></a>
/// <p>
/// <p>
/// Marker base class that is used for passing custom config implementations to an API request handler implementation.
SWIFT_CLASS("_TtC18ElectrodeContainer20RequestHandlerConfig")
@interface RequestHandlerConfig : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer21EnNavigationApiConfig")
@interface EnNavigationApiConfig : RequestHandlerConfig
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// GENERATED CODE: DO NOT MODIFY
/// Do not modify the content of this class as it will be regenerated every time an api-impl-regen command is executed.
/// @see <a href:“https://electrode.gitbooks.io/electrode-native/content/v/master/cli/regen-api-impl.html”></a>
SWIFT_CLASS("_TtC18ElectrodeContainer25EnNavigationApiController")
@interface EnNavigationApiController : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)registerWithConfig:(EnNavigationApiConfig * _Nullable)config;
@end


/// GENERATED CODE: DO NOT MODIFY
/// Do not modify the content of this class as it will be regenerated every time an api-impl-regen command is executed.
/// @see <a href:“https://electrode.gitbooks.io/electrode-native/content/v/master/cli/regen-api-impl.html”></a>
/// <p>
/// <p>
/// Marker interface that is used for request handler implementations inside an api.
SWIFT_PROTOCOL("_TtP18ElectrodeContainer37EnNavigationApiRequestHandlerDelegate_")
@protocol EnNavigationApiRequestHandlerDelegate
- (void)registerNavigateRequestHandler;
- (void)registerUpdateRequestHandler;
- (void)registerFinishRequestHandler;
- (void)registerBackRequestHandler;
@end


/// GENERATED CODE: DO NOT MODIFY
/// Do not modify the content of this class as it will be regenerated every time an api-impl-regen command is executed.
/// @see <a href:“https://electrode.gitbooks.io/electrode-native/content/v/master/cli/regen-api-impl.html”></a>
SWIFT_CLASS("_TtC18ElectrodeContainer22RequestHandlerProvider")
@interface RequestHandlerProvider : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This class is a generated place holder for your EnNavigation implementations.!
/// Feel free to modify this class contents as needed. <code>ern regen-api-impl</code> command WILL NOT modify the content of this class.
/// Don’t modify the class name as this naming convention is used for container generation.
SWIFT_CLASS("_TtC18ElectrodeContainer37EnNavigationApiRequestHandlerProvider")
@interface EnNavigationApiRequestHandlerProvider : RequestHandlerProvider <EnNavigationApiRequestHandlerDelegate>
- (void)registerNavigateRequestHandler;
- (void)registerUpdateRequestHandler;
- (void)registerFinishRequestHandler;
- (void)registerBackRequestHandler;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer18EnNavigationEvents")
@interface EnNavigationEvents : EnNavigationAPIEvents
- (NSUUID * _Nullable)addNavEventEventListenerWithEventListener:(ElectrodeBridgeEventListener _Nonnull)eventListener SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)addOnNavButtonClickEventListenerWithEventListener:(ElectrodeBridgeEventListener _Nonnull)eventListener SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeEventListener _Nullable)removeNavEventEventListenerWithUuid:(NSUUID * _Nonnull)uuid SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeEventListener _Nullable)removeOnNavButtonClickEventListenerWithUuid:(NSUUID * _Nonnull)uuid SWIFT_WARN_UNUSED_RESULT;
- (void)emitEventNavEventWithEventData:(NavEventData * _Nonnull)eventData;
- (void)emitEventOnNavButtonClickWithButtonId:(NSString * _Nonnull)buttonId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer20EnNavigationRequests")
@interface EnNavigationRequests : EnNavigationAPIRequests
- (NSUUID * _Nullable)registerBackRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)handler SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)registerFinishRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)handler SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)registerNavigateRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)handler SWIFT_WARN_UNUSED_RESULT;
- (NSUUID * _Nullable)registerUpdateRequestHandlerWithHandler:(ElectrodeBridgeRequestCompletionHandler _Nonnull)handler SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterBackRequestHandlerWithUuid:(NSUUID * _Nonnull)uuid SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterFinishRequestHandlerWithUuid:(NSUUID * _Nonnull)uuid SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterNavigateRequestHandlerWithUuid:(NSUUID * _Nonnull)uuid SWIFT_WARN_UNUSED_RESULT;
- (ElectrodeBridgeRequestCompletionHandler _Nullable)unregisterUpdateRequestHandlerWithUuid:(NSUUID * _Nonnull)uuid SWIFT_WARN_UNUSED_RESULT;
- (void)backWithRoute:(ErnNavRoute * _Nonnull)route responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))responseCompletionHandler;
- (void)finishWithFinalPayload:(NSString * _Nonnull)finalPayload responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))responseCompletionHandler;
- (void)navigateWithRoute:(ErnNavRoute * _Nonnull)route responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))responseCompletionHandler;
- (void)updateWithUpdatedRoute:(ErnNavRoute * _Nonnull)updatedRoute responseCompletionHandler:(void (^ _Nonnull)(None * _Nullable, id <ElectrodeFailureMessage> _Nullable))responseCompletionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NavigationBar;

SWIFT_CLASS("_TtC18ElectrodeContainer11ErnNavRoute")
@interface ErnNavRoute : ElectrodeObject <Bridgeable>
/// Path of the Route. Mostly the name of the container(defined by the native app) or the miniapp name. The content of the path is mainly determined by the native implemenation of the API
@property (nonatomic, readonly, copy) NSString * _Nonnull path;
/// Optional Payload (respresented as JSON String) needed by the screen you are trying to navigate to.
@property (nonatomic, readonly, copy) NSString * _Nullable jsonPayload;
@property (nonatomic, readonly, strong) NavigationBar * _Nullable navigationBar;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer24MiniAppNavViewController")
@interface MiniAppNavViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer34MoviesReloadedNavigationController")
@interface MoviesReloadedNavigationController : ENBaseNavigationController
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC18ElectrodeContainer12NavEventData")
@interface NavEventData : ElectrodeObject <Bridgeable>
/// Type of the event. Supported values [BUTTON_CLICK, DID_FOCUS, DID_BLUR]
@property (nonatomic, readonly, copy) NSString * _Nonnull eventType;
/// MiniApp view identifier to indicate the view instance that is firing the event. This is needed when more than one instance of the same component is mounted.
@property (nonatomic, readonly, copy) NSString * _Nullable viewId;
/// optional payload associated with the event
@property (nonatomic, readonly, copy) NSString * _Nullable jsonPayload;
- (nonnull instancetype)initWithEventType:(NSString * _Nonnull)eventType viewId:(NSString * _Nullable)viewId jsonPayload:(NSString * _Nullable)jsonPayload OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end

@class NavigationBarButton;
@class NavigationBarLeftButton;

SWIFT_CLASS("_TtC18ElectrodeContainer13NavigationBar")
@interface NavigationBar : ElectrodeObject <Bridgeable>
/// Title of Nav Bar
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
/// Right button properties
@property (nonatomic, readonly, copy) NSArray<NavigationBarButton *> * _Nullable buttons;
@property (nonatomic, readonly, strong) NavigationBarLeftButton * _Nullable leftButton;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer19NavigationBarButton")
@interface NavigationBarButton : ElectrodeObject <Bridgeable>
/// Button title if any.
@property (nonatomic, readonly, copy) NSString * _Nullable title;
/// Icon resource identifier that can be used find the icon
@property (nonatomic, readonly, copy) NSString * _Nullable icon;
/// Specifies a tint for the icon. Supported formats: #RRGGBB, #AARRGGBB. Supported values: red, blue, green, black, white, gray, cyan, magenta, yellow, lightgray, darkgray, grey, lightgrey, darkgrey, aqua, fuchsia, lime, maroon, navy, olive, purple, silver and teal
@property (nonatomic, readonly, copy) NSString * _Nullable tint;
/// Id of the button, this namespace will be used as an identifier when a button click event is emitted.
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
/// @Deprecated This is now Deprecated with the introduction of NavigationBarLeftButton. Allowed enums: left, right
@property (nonatomic, readonly, copy) NSString * _Nullable location;
/// Accessibility label
@property (nonatomic, readonly, copy) NSString * _Nullable adaLabel;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer23NavigationBarLeftButton")
@interface NavigationBarLeftButton : ElectrodeObject <Bridgeable>
/// Button title if any, applied only for iOS.
@property (nonatomic, readonly, copy) NSString * _Nullable title;
/// Icon resource identifier that can be used find the icon
@property (nonatomic, readonly, copy) NSString * _Nullable icon;
/// Specifies a tint for the icon. Supported formats: #RRGGBB, #AARRGGBB. Supported values: red, blue, green, black, white, gray, cyan, magenta, yellow, lightgray, darkgray, grey, lightgrey, darkgrey, aqua, fuchsia, lime, maroon, navy, olive, purple, silver and teal
@property (nonatomic, readonly, copy) NSString * _Nullable tint;
/// Id of the button, this namespace will be used as an identifier when a button click event is emitted. If included, click will not be handled by native instead an event will be fired for react native to handle the backpress.
@property (nonatomic, readonly, copy) NSString * _Nullable id;
/// Accessibility label
@property (nonatomic, readonly, copy) NSString * _Nullable adaLabel;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nonnull)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC18ElectrodeContainer4None")
@interface None : NSObject <Bridgeable>
- (NSDictionary * _Nonnull)toDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP18ElectrodeContainer9Processor_")
@protocol Processor
- (NSUUID * _Nullable)execute SWIFT_WARN_UNUSED_RESULT;
@end




#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
